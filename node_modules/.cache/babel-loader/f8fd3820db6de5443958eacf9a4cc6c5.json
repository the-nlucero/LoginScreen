{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dragon Slayer\\\\Desktop\\\\newProject\\\\src\\\\components\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  //Help IDE suggest value\n  onLogin: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Keeps User on Authenticated Screen By Holding a Key\n\n  useEffect(() => {\n    const storedUserLoggedInInfo = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  function logoutHandler() {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  }\n\n  function loginHandler() {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Dragon Slayer/Desktop/newProject/src/components/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","AuthContextProvider","props","setIsLoggedIn","storedUserLoggedInInfo","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAChB;AACIC,EAAAA,UAAU,EAAE,KADhB;AAEIC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFtB;AAEwB;AACpBC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHrB,CADgB,CAApB;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACJ,UAAD,EAAaK,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C,CAD0C,CAG9C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/B;;AAEA,QAAGF,sBAAsB,KAAK,GAA9B,EAAkC;AAChCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AAAC,GALG,EAKD,EALC,CAAT;;AAOA,WAASI,aAAT,GAAwB;AACpBF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH;;AAED,WAASM,YAAT,GAAuB;AACnBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAGG,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBL,MAAAA,UAAU,EAAEA,UADa;AAEzBC,MAAAA,QAAQ,EAAEQ,aAFe;AAGzBP,MAAAA,OAAO,EAACS;AAHiB,KAA7B;AAAA,cAKKP,KAAK,CAACS;AALX;AAAA;AAAA;AAAA;AAAA,UADA;AAQH,CA9BM;;GAAMV,mB;;KAAAA,mB;AAgCb,eAAeL,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst AuthContext = React.createContext(\r\n    {\r\n        isLoggedIn: false,\r\n        onLogout: () => {}, //Help IDE suggest value\r\n        onLogin: () => {}\r\n    }\r\n);\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n// Keeps User on Authenticated Screen By Holding a Key\r\nuseEffect(() => {\r\n    const storedUserLoggedInInfo = localStorage.getItem('isLoggedIn');\r\n\r\n    if(storedUserLoggedInInfo === '1'){\r\n      setIsLoggedIn(true);\r\n    }}, []);\r\n\r\nfunction logoutHandler(){\r\n    localStorage.removeItem('isLoggedIn');\r\n    setIsLoggedIn(false);\r\n}\r\n\r\nfunction loginHandler(){\r\n    localStorage.setItem('isLoggedIn', '1');\r\n    setIsLoggedIn(true);\r\n}\r\n\r\n\r\n    return (\r\n    <AuthContext.Provider value={{\r\n        isLoggedIn: isLoggedIn, \r\n        onLogout: logoutHandler, \r\n        onLogin:loginHandler,\r\n    }}> \r\n        {props.children} \r\n    </AuthContext.Provider>)\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}